# $Id$

PortSystem 1.0

name                openjdk7

set jport_minor_version 45
set jport_build_number  18
set jdk_major_version   7
set jdk_minor_version   40
set jdk_build_number    43
set jdk_build_date      26_aug_2013
version             ${jdk_major_version}.${jport_minor_version}.${jport_build_number}

categories          java
maintainers         landonf openmaintainer
platforms           darwin

homepage            http://openjdk.java.net/
description         An open-source implementation of the Java Platform, Standard Edition.
long_description \
                    OpenJDK is an open-source implementation of the Java Platform, Standard Edition. \
                    \
                    Much of the OpenJDK code is licensed under the GPL version 2 with the \
                    Classpath exception. The Java Hotspot virtual machine source code is \
                    licensed under the GPL version 2 only.

# Use our own version of ant to avoid circular dependencies
set ant_version     1.8.4
set ant_distfile    apache-ant-${ant_version}-bin

use_zip             yes
distname            openjdk-${jdk_major_version}u${jdk_minor_version}-fcs-src-b${jdk_build_number}-${jdk_build_date}
distfiles           ${distname}${extract.suffix} \
                    ${ant_distfile}${extract.suffix}:ant

master_sites        http://download.java.net/openjdk/jdk${jdk_major_version}u${jdk_minor_version}/promoted/b${jdk_build_number}/ \
                    apache:ant/binaries:ant

checksums           ${distname}${extract.suffix} sha256  00f8ea561876cbcad174ba3ca7a9ae10b50df46a782ac64c2ac57ac357b50596 \
                    \
                    ${ant_distfile}${extract.suffix} sha256 d49d60bc0468279125e4a0db4d9b6637cab342a4bd736c90c0b71865b26c1479
    

use_configure       no
use_parallel_build  no

depends_lib         port:libiconv \
                    port:freetype \
                    port:xorg-libX11 \
                    port:xorg-libXtst \
                    port:dejavu-fonts

# Check if the bootstrap is required
if {[file exists ${prefix}/share/java/openjdk6/bin/java]} {
    # A previous OpenJDK6 release is already installed
    set bootstrapvm "${prefix}/share/java/openjdk6"
} else {
    # A bootstrap binary is required to build
    depends_build-append port:openjdk6_bootstrap
    set bootstrapvm "${prefix}/share/java/openjdk6_bootstrap"
}

worksrcdir          "openjdk"

# Override the overzealous setting of build environmental variables and settings. These
# assume the use of (a well-behaved) autoconf, and cause an assortment of odd build failures when
# used with OpenJDK's build system.
#
# Unfortunately there's no simple knob to turn the argument insertion off, so this will
# probably have to be updated in the future
build.env {}
build.pre_args {}
build.post_args {}

# Determine the OpenJDK architecture
#
# XXX:
# The OpenJDK build scripts currently rely on uname -m, which may return i386 or x86_64
# regardless of the actual supported architecture. I'll be fixing this upstream (using ARCH_DATA_MODEL to
# let the user select between amd64/i586 on any x86 target), but in the meantime, we use UNAME_MACHINE
# to override what uname -m returns.
supported_archs i386 x86_64 ppc
if {${build_arch} == "i386"} {
    build.env-append "UNAME_MACHINE=i386"
    set openjdk_datamodel "32"
    set openjdk_build_arch "i586"

} elseif {${build_arch} == "x86_64"} {
    build.env-append "UNAME_MACHINE=amd64"
    set openjdk_datamodel "64"
    set openjdk_build_arch "amd64"

} elseif {${build_arch} == "ppc"} {
    # Currently unsupported
    build.env-append "UNAME_MACHINE=ppc"
    set openjdk_datamodel "32"
    set openjdk_build_arch "ppc"
} else {
    # Unknown architecture
    set openjdk_datamodel "32"
    set openjdk_build_arch "unsupported"
}

build.args \
    ARCH_DATA_MODEL="${openjdk_datamodel}" \
    ALT_BOOTDIR="${bootstrapvm}" \
    ALT_JDK_IMPORT_PATH="${bootstrapvm}" \
    ALT_BINARY_PLUGS_PATH="${prefix}/share/java/icedtea6-plugs/jre/lib/rt-closed.jar" \
    ALT_DROPS_DIR="${distpath}" \
    ANT_HOME="${prefix}/share/java/apache-ant" \
    ALT_FREETYPE_HEADERS_PATH="${prefix}/include" \
    ALT_FREETYPE_LIB_PATH="${prefix}/lib" \
    ALT_CUPS_HEADERS_PATH="/usr/include" \
    ALT_MOTIF_DIR="${prefix}" \
    ALT_X11_PATH="${prefix}" \
    ALT_DEVTOOLS_PATH=/usr \
    ALT_CACERTS_FILE=/System/Library/Frameworks/JavaVM.framework/Home/lib/security/cacerts \
    NO_DOCS=true \
    LANG="C" \
    BUILD_NUMBER="${version}" \
    MILESTONE=fcs \
    HOTSPOT_BUILD_JOBS="${build.jobs}"

variant fastdebug {
    build.post_args FASTDEBUG=true
}

destroot {
    set path "${destroot}${prefix}/share/java/${name}/"
    xinstall -m 755 -d ${path}
    system "(cd ${worksrcpath}/build/bsd-${openjdk_build_arch}/j2sdk-image && tar cf - *) | (tar -C ${path} -xf -)"
}

livecheck.type  regex
livecheck.url   http://download.java.net/openjdk/jdk6/
livecheck.regex openjdk-6-src-(b\[0-9\]+)-.*\\.tar\\.gz
